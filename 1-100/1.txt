给定一个数组nums和一个数target，反正数组中和为target的两个数

没什么可说的，遍历查找。用map做空间换时间的一个处理
最开始想需要遍历两次，第一次把值存在map中，第二次计算是否在map中有值。但是也可以处理成只循环一次，如果存在a + b = target,一次把 a存进去，计算b的时候就判断a一样成立

func twoSum(nums []int, target int) []int {
    numsMap := make(map[int]int)
    for i, v := range nums {
        if index, ok := numsMap[target - v]; ok{
            return []int {i, index}
        }else{
            numsMap[v] = i
        }
    }
    
    return []int{-1, -1}
}